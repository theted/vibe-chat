name: E2E

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  e2e:
    name: End-to-end tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and start application stack
        env:
          COMPOSE_FILE: ai-chat-realtime/docker-compose.yml
        run: docker compose up -d --build

      - name: Wait for application readiness
        env:
          HEALTH_URL: http://localhost:3001/health
          CLIENT_URL: http://localhost:3000
          COMPOSE_FILE: ai-chat-realtime/docker-compose.yml
        run: |
          set -euo pipefail

          wait_for() {
            local url="$1"
            for i in $(seq 1 60); do
              if curl -fsS "$url" >/dev/null; then
                echo "Service available: $url"
                return 0
              fi
              sleep 2
            done
            echo "Service did not become ready: $url" >&2
            docker compose logs
            return 1
          }

          wait_for "$HEALTH_URL"
          wait_for "$CLIENT_URL"

      - name: Install Playwright browsers
        run: npx --yes -p playwright playwright install --with-deps chromium

      - name: Run end-to-end tests
        env:
          CODECEPT_BASE_URL: http://localhost:3000
        run: npm run test:e2e

      - name: Stop application stack
        if: always()
        env:
          COMPOSE_FILE: ai-chat-realtime/docker-compose.yml
        run: docker compose down -v
